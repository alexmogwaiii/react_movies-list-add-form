{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","values","errors","isNotValid","handleChange","event","target","value","name","setState","handleSubmit","preventDefault","newMovie","isValideImgUrl","validateUrl","isValideImdbUrl","props","addMovie","isValid","url","match","this","method","action","onSubmit","htmlFor","id","cn","onChange","type","disabled","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b1957449.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    values: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n    errors: {\n      title: false,\n      imgUrl: false,\n      imdbUrl: false,\n      imdbId: false,\n    },\n    isNotValid: false,\n  };\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n\n    this.setState(state => ({\n      values: {\n        ...state.values,\n        [name]: value,\n      },\n      errors: {\n        ...state.errors,\n        [name]: false,\n      },\n      isNotValid: false,\n    }));\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state.values;\n\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    const isValideImgUrl = this.validateUrl(imgUrl);\n    const isValideImdbUrl = this.validateUrl(imdbUrl);\n\n    if (!title || !isValideImgUrl || !isValideImdbUrl || !imdbId) {\n      this.setState(state => ({\n        errors: {\n          ...state.errors,\n          title: !title,\n          imgUrl: !isValideImgUrl,\n          imdbUrl: !isValideImdbUrl,\n          imdbId: !imdbId,\n        },\n        isNotValid: !state.isValid,\n      }));\n\n      return;\n    }\n\n    this.setState({\n      values: {\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      },\n      errors: {\n        title: false,\n        imgUrl: false,\n        imdbUrl: false,\n        imdbId: false,\n      },\n    });\n\n    this.props.addMovie(newMovie);\n  }\n\n  validateUrl = (url) => {\n    // eslint-disable-next-line\n    const isValid = url.match(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/);\n\n    return isValid;\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state.values;\n\n    return (\n      <form\n        className=\"form\"\n        method=\"POST\"\n        action=\"/\"\n        onSubmit={this.handleSubmit}\n      >\n        <div className=\"form__wrapper\">\n          <label htmlFor=\"title\">Title</label>\n          <input\n            id=\"title\"\n            name=\"title\"\n            className={cn('form__input',\n              { 'form__input--error': this.state.errors.title })}\n            onChange={this.handleChange}\n            value={title}\n          />\n          {this.state.errors.title && (\n            <div className=\"form__error-message\">\n              You forgot to pass the title of the movie\n            </div>\n          )}\n        </div>\n\n        <div className=\"form__wrapper\">\n          <label htmlFor=\"description\">Description</label>\n          <input\n            id=\"description\"\n            name=\"description\"\n            className=\"form__input\"\n            onChange={this.handleChange}\n            value={description}\n          />\n        </div>\n\n        <div className=\"form__wrapper\">\n          <label htmlFor=\"imgUrl\">ImgUrl</label>\n          <input\n            id=\"imgUrl\"\n            name=\"imgUrl\"\n            className={cn('form__input',\n              { 'form__input--error': this.state.errors.imgUrl })}\n            onChange={this.handleChange}\n            value={imgUrl}\n          />\n          {this.state.errors.imgUrl && (\n            <div className=\"form__error-message\">\n              Please pass the valid URL\n            </div>\n          )}\n        </div>\n\n        <div className=\"form__wrapper\">\n          <label htmlFor=\"imdbUrl\">ImdbUrl</label>\n          <input\n            id=\"imdbUrl\"\n            name=\"imdbUrl\"\n            className={cn('form__input',\n              { 'form__input--error': this.state.errors.imdbUrl })}\n            onChange={this.handleChange}\n            value={imdbUrl}\n          />\n          {this.state.errors.imdbUrl && (\n            <div className=\"form__error-message\">\n              Please pass the valid URL\n            </div>\n          )}\n        </div>\n\n        <div className=\"form__wrapper\">\n          <label htmlFor=\"imdbId\">ImdbId</label>\n          <input\n            id=\"imdbId\"\n            name=\"imdbId\"\n            className={cn('form__input',\n              { 'form__input--error': this.state.errors.imdbId })}\n            onChange={this.handleChange}\n            value={imdbId}\n          />\n          {this.state.errors.imdbId && (\n            <div className=\"form__error-message\">\n              ImdbId must be required\n            </div>\n          )}\n        </div>\n\n        <button\n          className=\"form__submit\"\n          type=\"submit\"\n          disabled={!!this.state.isNotValid}\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [\n        ...state.movies,\n        movie,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}